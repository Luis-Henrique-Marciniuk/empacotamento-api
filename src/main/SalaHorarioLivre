import java.sql.*;
import java.time.LocalTime;
import java.util.*;

public class SalaHorarioLivre {

    static class Ocupacao {
        int dayOfWeek;
        LocalTime start;
        LocalTime end;

        public Ocupacao(int dayOfWeek, LocalTime start, LocalTime end) {
            this.dayOfWeek = dayOfWeek;
            this.start = start;
            this.end = end;
        }
    }

    public static void main(String[] args) throws Exception {
        Connection conn = DriverManager.getConnection("jdbc:SQL", "luis", "admin");
        Statement stmt = conn.createStatement();
        ResultSet rs = stmt.executeQuery("SELECT r.id AS room_id, cs.day_of_week, cs.start_time, cs.end_time FROM ROOM r JOIN CLASS_SCHEDULE cs ON r.id = cs.room_id ORDER BY r.id, cs.day_of_week, cs.start_time");

        Map<Integer, Map<Integer, List<Ocupacao>>> ocupacoes = new HashMap<>();

        while (rs.next()) {
            int roomId = rs.getInt("room_id");
            int day = rs.getInt("day_of_week");
            LocalTime start = rs.getTime("start_time").toLocalTime();
            LocalTime end = rs.getTime("end_time").toLocalTime();

            ocupacoes.computeIfAbsent(roomId, k -> new HashMap<>())
                     .computeIfAbsent(day, k -> new ArrayList<>())
                     .add(new Ocupacao(day, start, end));
        }

        LocalTime inicioDia = LocalTime.of(8, 0);
        LocalTime fimDia = LocalTime.of(18, 0);

        for (var sala : ocupacoes.entrySet()) {
            int roomId = sala.getKey();
            System.out.println("Sala: " + roomId);

            for (int dia = 1; dia <= 6; dia++) {
                System.out.println(" Dia da semana: " + dia);

                List<Ocupacao> ocup = sala.getValue().getOrDefault(dia, new ArrayList<>());
                ocup.sort(Comparator.comparing(o -> o.start));

                LocalTime livreInicio = inicioDia;

                for (Ocupacao o : ocup) {
                    if (livreInicio.isBefore(o.start)) {
                        System.out.println("  Livre: " + livreInicio + " - " + o.start);
                    }
                    livreInicio = o.end.isAfter(livreInicio) ? o.end : livreInicio;
                }

                if (livreInicio.isBefore(fimDia)) {
                    System.out.println("  Livre: " + livreInicio + " - " + fimDia);
                }
            }
        }

        conn.close();
    }
}
